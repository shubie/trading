// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: candlestick.proto

package candlestick

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthResponse_Status int32

const (
	HealthResponse_UNKNOWN   HealthResponse_Status = 0
	HealthResponse_HEALTHY   HealthResponse_Status = 1
	HealthResponse_UNHEALTHY HealthResponse_Status = 2
)

// Enum value maps for HealthResponse_Status.
var (
	HealthResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "HEALTHY",
		2: "UNHEALTHY",
	}
	HealthResponse_Status_value = map[string]int32{
		"UNKNOWN":   0,
		"HEALTHY":   1,
		"UNHEALTHY": 2,
	}
)

func (x HealthResponse_Status) Enum() *HealthResponse_Status {
	p := new(HealthResponse_Status)
	*p = x
	return p
}

func (x HealthResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_candlestick_proto_enumTypes[0].Descriptor()
}

func (HealthResponse_Status) Type() protoreflect.EnumType {
	return &file_candlestick_proto_enumTypes[0]
}

func (x HealthResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthResponse_Status.Descriptor instead.
func (HealthResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_candlestick_proto_rawDescGZIP(), []int{3, 0}
}

type StreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbols       []string               `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	mi := &file_candlestick_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_candlestick_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_candlestick_proto_rawDescGZIP(), []int{0}
}

func (x *StreamRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type Candlestick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Open          float64                `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	High          float64                `protobuf:"fixed64,3,opt,name=high,proto3" json:"high,omitempty"`
	Low           float64                `protobuf:"fixed64,4,opt,name=low,proto3" json:"low,omitempty"`
	Close         float64                `protobuf:"fixed64,5,opt,name=close,proto3" json:"close,omitempty"`
	Volume        float64                `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume,omitempty"`
	StartTime     int64                  `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64                  `protobuf:"varint,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	IsFinal       bool                   `protobuf:"varint,9,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Candlestick) Reset() {
	*x = Candlestick{}
	mi := &file_candlestick_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Candlestick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candlestick) ProtoMessage() {}

func (x *Candlestick) ProtoReflect() protoreflect.Message {
	mi := &file_candlestick_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candlestick.ProtoReflect.Descriptor instead.
func (*Candlestick) Descriptor() ([]byte, []int) {
	return file_candlestick_proto_rawDescGZIP(), []int{1}
}

func (x *Candlestick) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Candlestick) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Candlestick) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Candlestick) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Candlestick) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Candlestick) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Candlestick) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Candlestick) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Candlestick) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_candlestick_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_candlestick_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_candlestick_proto_rawDescGZIP(), []int{2}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        HealthResponse_Status  `protobuf:"varint,1,opt,name=status,proto3,enum=candlestick.HealthResponse_Status" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	LastDataMs    int64                  `protobuf:"varint,3,opt,name=last_data_ms,json=lastDataMs,proto3" json:"last_data_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_candlestick_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_candlestick_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_candlestick_proto_rawDescGZIP(), []int{3}
}

func (x *HealthResponse) GetStatus() HealthResponse_Status {
	if x != nil {
		return x.Status
	}
	return HealthResponse_UNKNOWN
}

func (x *HealthResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthResponse) GetLastDataMs() int64 {
	if x != nil {
		return x.LastDataMs
	}
	return 0
}

var File_candlestick_proto protoreflect.FileDescriptor

const file_candlestick_proto_rawDesc = "" +
	"\n" +
	"\x11candlestick.proto\x12\vcandlestick\")\n" +
	"\rStreamRequest\x12\x18\n" +
	"\asymbols\x18\x01 \x03(\tR\asymbols\"\xe2\x01\n" +
	"\vCandlestick\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04open\x18\x02 \x01(\x01R\x04open\x12\x12\n" +
	"\x04high\x18\x03 \x01(\x01R\x04high\x12\x10\n" +
	"\x03low\x18\x04 \x01(\x01R\x03low\x12\x14\n" +
	"\x05close\x18\x05 \x01(\x01R\x05close\x12\x16\n" +
	"\x06volume\x18\x06 \x01(\x01R\x06volume\x12\x1d\n" +
	"\n" +
	"start_time\x18\a \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\b \x01(\x03R\aendTime\x12\x19\n" +
	"\bis_final\x18\t \x01(\bR\aisFinal\"\x0f\n" +
	"\rHealthRequest\"\xbb\x01\n" +
	"\x0eHealthResponse\x12:\n" +
	"\x06status\x18\x01 \x01(\x0e2\".candlestick.HealthResponse.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12 \n" +
	"\flast_data_ms\x18\x03 \x01(\x03R\n" +
	"lastDataMs\"1\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aHEALTHY\x10\x01\x12\r\n" +
	"\tUNHEALTHY\x10\x022b\n" +
	"\x12CandlestickService\x12L\n" +
	"\x12StreamCandlesticks\x12\x1a.candlestick.StreamRequest\x1a\x18.candlestick.Candlestick0\x012W\n" +
	"\x12HealthCheckService\x12A\n" +
	"\x06Health\x12\x1a.candlestick.HealthRequest\x1a\x1b.candlestick.HealthResponseB$Z\"api/protos/candlestick;candlestickb\x06proto3"

var (
	file_candlestick_proto_rawDescOnce sync.Once
	file_candlestick_proto_rawDescData []byte
)

func file_candlestick_proto_rawDescGZIP() []byte {
	file_candlestick_proto_rawDescOnce.Do(func() {
		file_candlestick_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_candlestick_proto_rawDesc), len(file_candlestick_proto_rawDesc)))
	})
	return file_candlestick_proto_rawDescData
}

var file_candlestick_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_candlestick_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_candlestick_proto_goTypes = []any{
	(HealthResponse_Status)(0), // 0: candlestick.HealthResponse.Status
	(*StreamRequest)(nil),      // 1: candlestick.StreamRequest
	(*Candlestick)(nil),        // 2: candlestick.Candlestick
	(*HealthRequest)(nil),      // 3: candlestick.HealthRequest
	(*HealthResponse)(nil),     // 4: candlestick.HealthResponse
}
var file_candlestick_proto_depIdxs = []int32{
	0, // 0: candlestick.HealthResponse.status:type_name -> candlestick.HealthResponse.Status
	1, // 1: candlestick.CandlestickService.StreamCandlesticks:input_type -> candlestick.StreamRequest
	3, // 2: candlestick.HealthCheckService.Health:input_type -> candlestick.HealthRequest
	2, // 3: candlestick.CandlestickService.StreamCandlesticks:output_type -> candlestick.Candlestick
	4, // 4: candlestick.HealthCheckService.Health:output_type -> candlestick.HealthResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_candlestick_proto_init() }
func file_candlestick_proto_init() {
	if File_candlestick_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_candlestick_proto_rawDesc), len(file_candlestick_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_candlestick_proto_goTypes,
		DependencyIndexes: file_candlestick_proto_depIdxs,
		EnumInfos:         file_candlestick_proto_enumTypes,
		MessageInfos:      file_candlestick_proto_msgTypes,
	}.Build()
	File_candlestick_proto = out.File
	file_candlestick_proto_goTypes = nil
	file_candlestick_proto_depIdxs = nil
}
